# Docker Compose configuration file.
#
# - Using a single file to work in local, CI and production environments.
# - Local overrides are possible using docker-composer.override.yml file.
# - Environment variables are read from .env file.
# - Use inline comments containing '###' to have the line removed in CI.
# - Use inline comments starting with '##' to have the line being automatically
#   uncommented in CI.
# See more about DrevOps Docker at https://docs.drevops.com/docker/

version: '2.3'

# ------------------------------------------------------------------------------
# Variable aliases.
# ------------------------------------------------------------------------------

# Volumes available in each container to share application data.
# See more about Docker host volume mounting at https://docs.drevops.com/docker#host-volume-mounting-in-docker-based-projects
x-volumes: &default-volumes
  volumes:
    # All application files mounted into container.
    - .:/app:${VOLUME_FLAGS:-delegated} ### Local overrides to mount host filesystem. Automatically removed in CI and PROD.
    # Override mount for files to allow different type of syncing to optimise performance.
    - ./docroot/sites/default/files:/app/docroot/sites/default/files:${VOLUME_FLAGS:-delegated} ### Local overrides to mount host filesystem. Automatically removed in CI and PROD.
    # Use the same volumes in environments without host mounts support.
    ##- app:/app # Override for environment without host mounts. Automatically uncommented in CI.
    ##- files:/app/docroot/sites/default/files # Override for environment without host mounts. Automatically uncommented in CI.

# The default user under which the containers should run.
x-user: &default-user
  # Change this if you are on linux and run with another user than id `1000`
  user: '1000'

# Environment variables set in all containers during build and runtime.
# Note that these variables are not read from here in Lagoon environment.
x-environment: &default-environment
  # Project name. Defaults to Docker Compose project name (which defaults to the current directory).
  DREVOPS_PROJECT: ${DREVOPS_PROJECT:-example_site}
  # Local development URL used in Lagoon images.
  LAGOON_LOCALDEV_URL: &default-url ${DREVOPS_LOCALDEV_URL:-example-site.docker.amazee.io}
  # Local route used in Lagoon images and Pygmy to route requests.
  LAGOON_ROUTE: *default-url
  # Enable XDebug with "ahoy debug" or "XDEBUG_ENABLE=true docker-compose up -d".
  XDEBUG_ENABLE: ${XDEBUG_ENABLE:-}
  # Pass-through $CI variable used to identify the CI environment.
  CI: ${CI:-}
  # Uncomment below if emails are not being received by Mailhog locally.
  # SSMTP_MAILHUB: ${SSMTP_MAILHUB:-host.docker.internal:1025}
  # Uncomment below if emails are not being received by Mailhog locally.
  # SSMTP_MAILHUB: ${SSMTP_MAILHUB:-host.docker.internal:1025}
  # Drupal Shield credentials.
  DRUPAL_SHIELD_USER: ${DRUPAL_SHIELD_USER:-}
  DRUPAL_SHIELD_PASS: ${DRUPAL_SHIELD_PASS:-}
  # Global project name for Lagoon.
  LAGOON_PROJECT: ${LAGOON_PROJECT:-example_site}
  # Lagoon environment type.
  LAGOON_ENVIRONMENT_TYPE: ${LAGOON_ENVIRONMENT_TYPE:-local}
  GITHUB_TOKEN: ${GITHUB_TOKEN:-}

# ------------------------------------------------------------------------------
# Services.
# ------------------------------------------------------------------------------

services:
  # CLI container, used for executing CLI commands such as Composer, Drush etc. Not used to handle web requests.
  cli:
    build:
      context: .
      dockerfile: .docker/Dockerfile.cli
      args:
        GITHUB_TOKEN: "${GITHUB_TOKEN:-}"
    image: &cli-image ${DREVOPS_PROJECT:-example_site}-cli
    <<: *default-volumes
    user: root
    environment:
      <<: *default-environment
    # Mount volumes from the ssh-agent running in Pygmy to inject host SSH key into container. See https://pygmy.readthedocs.io/en/master/ssh_agent/
    volumes_from: ### Local overrides to mount host SSH keys. Automatically removed in CI.
      - container:amazeeio-ssh-agent ### Local overrides to mount host SSH keys. Automatically removed in CI.
    ports:
      - "35729" # Livereload port in container. Find port on host with `ahoy info` or `docker-compose port cli 35729`.
    labels:
      lagoon.type: cli-persistent # See https://docs.lagoon.sh/using-lagoon-advanced/service-types/
      lagoon.persistent.name: &lagoon-nginx-name nginx-php # Mount the persistent storage of nginx-php pod into this container.
      lagoon.persistent: &lagoon-drupal-files /app/docroot/sites/default/files/  # Location where the persistent storage should be mounted.

  nginx:
    build:
      context: .
      dockerfile: .docker/Dockerfile.nginx-drupal
      args:
        CLI_IMAGE: *cli-image
    <<: *default-volumes
    <<: *default-user
    environment:
      <<: *default-environment
    depends_on:
      - cli
    networks:
      - amazeeio-network # This network is supported by Pygmy and used to route all requests to host machine.
      - default # This is a standard network and is used for all other environments, where requests routing is not required and/or not supported.
    labels:
      lagoon.type: nginx-php-persistent # See https://docs.lagoon.sh/using-lagoon-advanced/service-types/
      lagoon.name: *lagoon-nginx-name
      lagoon.persistent: *lagoon-drupal-files
      lagoon.persistent.class: slow

  # PHP FPM container. All web requests are going through this container.
  php:
    build:
      context: .
      dockerfile: .docker/Dockerfile.php
      args:
        CLI_IMAGE: *cli-image
    <<: *default-volumes
    <<: *default-user
    environment:
      <<: *default-environment
    depends_on:
      - cli
    labels:
      lagoon.type: nginx-php-persistent # See https://docs.lagoon.sh/using-lagoon-advanced/service-types/
      lagoon.name: *lagoon-nginx-name
      lagoon.persistent: *lagoon-drupal-files
      lagoon.persistent.class: slow

  mariadb:
    build:
      context: .
      dockerfile: .docker/Dockerfile.mariadb
      args:
        IMAGE: "${DREVOPS_DB_DOCKER_IMAGE:-uselagoon/mariadb-drupal:22.4.1}" # Use custom database image (if defined) or fallback to standard database image.
    environment:
      <<: *default-environment
    ports:
      - "3306" # MariaDB port in container. Find port on host with `ahoy info` or `docker-compose port mariadb 3306`.
    labels:
      lagoon.type: mariadb # See https://docs.lagoon.sh/using-lagoon-advanced/service-types/

  solr:
    build:
      context: .
      dockerfile: .docker/Dockerfile.solr
      args:
        CLI_IMAGE: *cli-image
    <<: *default-user
    environment:
      <<: *default-environment
    ports:
      - "8983" # Solr port in container. Find port on host with `ahoy info` or `docker-compose port solr 8983`.
    labels:
      lagoon.type: solr # See https://docs.lagoon.sh/using-lagoon-advanced/service-types/

  # Chrome container, used for browser testing.
  chrome:
    image: selenium/standalone-chrome
    shm_size: '1gb' # Increase '/dev/shm' partition size to avoid browser crashing.
    <<: *default-volumes # Use default volumes to provide access to test fixtures.
    environment:
      <<: *default-environment
    depends_on:
      - cli
    labels:
      lagoon.type: none # Do not deploy in Lagoon.

  # Helper container to wait for services to become available.
  wait_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - cli
      - mariadb
    command: mariadb:3306
    labels:
      lagoon.type: none # Do not deploy in Lagoon.

networks:
  amazeeio-network:
    external: true

volumes:
  app: {}
  files: {}
