@import 'base.scss';

#root {
  font-family: sans-serif;
}

.colors-wrapper {
  .colors-group {
    display: flex;
    width: 100%;

    div {
      width: 100px;
      height: 100px;
      border: 1px solid #CCD4D8;
      border-radius: 12px;
      margin: 8px;
    }
  }

  $all-colors: map-merge($civic-default-colors, $civic-colors);
  @include spawn-variations($all-colors, 'color') using($key, $value, $index) {
    position: relative;
    background-color: civic-color($key);
    $content: to-upper-case(str-slice($key, 1, 1)) + str-slice($key, 2) + "\A" + to-upper-case(#{$value});
    &::before {
      content: "#{$content}";
      color: invert($value);
      position: absolute;
      text-align: center;
      margin-top: 30px;
      display: none;
    }

    &:hover {
      &::before {
        display: block;
      }
    }
  }
}

.spacing-wrapper {
  max-width: 960px;

  div {
    position: relative;
    width: 100%;
    min-height: $civic-space;
    box-sizing: border-box;
  }

  @include spawn-variations($civic-spaces, 'spacing') using($name, $value, $index) {
    padding: $value 0 0 $value;
    $transparency: if($index % 2 == 0, 25%, 50%);
    background-color: mix(#61DAFF, white, $transparency);

    &::before {
      content: 'Space #{$name}';
      position: absolute;
      top: 2px;
      left: 2px;
    }
  }
}

.typography-wrapper {
  @include spawn-variations($civic-typography) using($name, $value, $index) {
    @include civic-typography($name);
  }
}
