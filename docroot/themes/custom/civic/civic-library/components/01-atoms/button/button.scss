//
// Button.
//

//
// Mixins.
//

@mixin civic-button($type: 'primary', $size: 'regular', $icon: false, $icon_placement: 'right', $is_disabled: false) {
  @include civic-button-type($type);
  @include civic-button-size($size);
}

@mixin civic-button-type($type) {
  $types: ('primary', 'secondary', 'tertiary');

  @if not index($types, $type) {
    @error '"#{$type}" is not one of allowed #{$types}.';
  }

  display: inline-block;
  text-decoration: none;

  &:focus,
  &:hover,
  &:active {
    text-decoration: underline;
  }

  &[disabled] {
    text-decoration: none;
  }

  .civic-icon {
    vertical-align: middle;
  }

  &.civic-theme-light {
    &:focus {
      box-shadow: 0 0 0 3pt civic-color('outline');
      background-color: $civic-button-light-focus-background-color;
      border: rem(2px) solid $civic-button-light-border-color;
    }

    &:hover {
      background-color: $civic-button-light-hover-background-color;
    }

    &:active {
      background-color: $civic-button-light-active-background-color;
      border: rem(2px) solid $civic-button-light-border-color;
    }

    &[disabled] {
      background-color: $civic-button-light-disabled-background-color;
      color: $civic-button-light-disabled-color;
    }

    &:focus,
    &:hover,
    &:active {
      color: $civic-button-light-state-color;

      .civic-icon {
        fill: $civic-button-light-state-color;
      }
    }
  }

  &.civic-theme-dark {
    &:focus {
      @include civic-outline();

      background-color: $civic-button-dark-focus-background-color;
      color: $civic-button-dark-focus-color;
      border: rem(2px) solid $civic-button-dark-border-color;

      .civic-icon {
        fill: $civic-button-dark-focus-color;
      }
    }

    &:hover {
      background-color: $civic-button-dark-hover-background-color;
      color: $civic-button-dark-state-color;

      .civic-icon {
        fill: $civic-button-dark-state-color;
      }
    }

    &:active {
      background-color: $civic-button-dark-active-background-color;
      border: rem(2px) solid $civic-button-dark-border-color;
      color: $civic-button-dark-state-color;

      .civic-icon {
        fill: $civic-button-dark-state-color;
      }
    }

    &[disabled] {
      background-color: $civic-button-dark-disabled-background-color;
      color: $civic-button-dark-state-color;

      .civic-icon {
        fill: $civic-button-dark-state-color;
      }
    }
  }

  @if $type == 'primary' {
    &.civic-theme-light {
      background-color: $civic-button-light-primary-background-color;
      color: $civic-button-light-primary-color;

      .civic-icon {
        fill: $civic-button-light-primary-color;
      }
    }

    &.civic-theme-dark {
      background-color: $civic-button-dark-primary-background-color;
      color: $civic-button-dark-primary-color;
    }
  }
  @else if $type == 'secondary' {
    &.civic-theme-light {
      background-color: $civic-button-light-secondary-background-color;
      color: $civic-button-light-secondary-color;
      border: rem(3px) solid $civic-button-light-secondary-border-color;

      &:focus {
        border-color: $civic-button-light-border-color;
      }

      &:hover {
        border-color: $civic-button-light-border-color;
      }

      &:active {
        border-color: $civic-button-light-border-color;
      }

      &[disabled] {
        border-color: $civic-button-light-disabled-background-color;
      }

      .civic-icon {
        fill: $civic-button-light-secondary-color;
      }
    }

    &.civic-theme-dark {
      background-color: $civic-button-dark-secondary-background-color;
      color: $civic-button-dark-secondary-color;
      border: rem(3px) solid $civic-button-dark-secondary-border-color;

      &:focus {
        border-color: $civic-button-dark-border-color;
      }

      &:hover {
        border-color: $civic-button-dark-hover-background-color;
      }

      &:active {
        border-color: $civic-button-dark-border-color;
      }

      &[disabled] {
        border-color: $civic-button-dark-disabled-background-color;
      }
    }
  }
  @else if $type == 'tertiary' {
    &.civic-theme-light {
      background-color: $civic-button-light-tertiary-background-color;
      color: $civic-button-light-tertiary-color;

      .civic-icon {
        fill: $civic-button-light-tertiary-color;
      }
    }

    &.civic-theme-dark {
      background-color: $civic-button-dark-tertiary-background-color;
      color: $civic-button-dark-tertiary-color;
    }
  }
}

@mixin civic-button-size($size) {
  // stylelint-disable-next-line scss/dollar-variable-pattern
  $sizes: ('large', 'regular', 'small');

  @if $size == 'large' {
    @include civic-typography('label-#{$size}');

    padding: civic-space(2) civic-space(5);
  }
  @else if $size == 'regular' {
    @include civic-typography('label-#{$size}');

    padding: civic-space(2) civic-space(5);
  }
  @else if $size == 'small' {
    @include civic-typography('label-#{$size}');

    padding: civic-space() civic-space(3);
  }
  @else {
    @error '"#{$size}" is not one of allowed #{$sizes}.';
  }
}

//
// Classes.
//

.civic-button {
  cursor: pointer;
  border: 2px solid transparent;
  border-radius: $civic-button-border-radius;

  @include civic-button-size('regular');

  &--primary {
    @include civic-button-type('primary');
  }

  &--secondary {
    @include civic-button-type('secondary');
  }

  &--tertiary {
    @include civic-button-type('tertiary');
  }

  &--large {
    @include civic-button-size('large');
  }

  &--regular {
    @include civic-button-size('regular');
  }

  &--small {
    @include civic-button-size('small');
  }
}
