//
// Font imports.
//
// stylelint-disable no-invalid-position-at-import-rule, scss/dollar-variable-pattern
@use 'sass:list';
@use 'sass:map';
@use 'sass:string';

$all-fonts: _civic-fonts-all();

@each $font-name, $font-map in $all-fonts {
  @if not (map.has-key($font-map, 'family')) {
    @error "Font #{$font-name} value is missing the 'family' key.";
  }

  $font-family: map.get($font-map, 'family');

  @if not (map.has-key($font-map, 'types')) {
    @error "Font #{$font-name} value is missing the 'types' key.";
  }

  $types: map.get($font-map, 'types');

  @if not type-of($types) == 'list' {
    @error "Font #{$font-name} value 'types' must be a list.";
  }

  @each $type-map in $types {
    @if not (map.has-key($type-map, 'uri')) {
      @error "Font #{$font-name} value is missing the 'uri' key.";
    }

    $uri: map.get($type-map, 'uri');

    // Convert scalar value to a list.
    @if not (type-of($uri) == 'list') {
      $uri: ($uri);
    }

    // Validate list: either single URL OR single or multiple local files.
    @each $path in $uri {
      $has-url: false;

      @if string.index($path, 'http') == 1 and list.length($uri) > 1 {
        @error "Font #{$font-name} 'uri' value must have only one absolute URL.";
      }
    }

    $local-src-list: ();
    $extra-src: null;

    @each $path in $uri {
      @if string.index($path, 'http') == 1 {
        @include civic-font-url-import($path);
      }
      @else {
        // Extract format from file extension.
        $format: string.slice($path, civic-string-last-index($path, '.') + 1);

        // Handle special case for EOT and IE.
        @if $format == 'eot' {
          $extra-src: url('#{$path}');
          $path: '#{$path}?#iefix';
          $format: 'embedded-opentype';
        }

        // noinspection CssInvalidFunction
        $local-src-list: list.append($local-src-list, url('#{$path}') format('#{$format}'), comma);
      }
    }

    @if list.length($local-src-list) > 0 {
      @font-face {
        font-family: string.unquote($font-family);

        @if $extra-src {
          src: $extra-src;
        }

        src: $local-src-list;

        @if map.get($type-map, 'italic') == true {
          font-style: italic;
        }

        @if map.get($type-map, 'weight') != null {
          $weight: map.get($type-map, 'weight');

          @if civic-string-is-quoted($weight) {
            $weight: $weight;
          }

          font-weight: $weight;
        }
      }
    }
  }
}
