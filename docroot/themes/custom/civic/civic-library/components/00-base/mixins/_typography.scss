//
// Typography mixins.
//
// stylelint-disable scss/dollar-variable-pattern

@use 'sass:map';
@use 'sass:list';

//
// Include font size, height, weight and family for one-to-many breakpoints.
//
// @include typography('heading-l');
// or
// @include typography((24px, 1.2em, 400));
// or
// @include typography((
//   'xs': (16px, 1.5em, 400),
//   'l': (24px, 1.2em, 600)
// ));
//
@mixin civic-typography($ruleset) {
  // Print preset
  @if type-of($ruleset) == string {
    @if map.get($civic-typography, $ruleset) == null {
      @error '"#{$ruleset}" is not an available typeset';
    }

    $ruleset: map.get($civic-typography, $ruleset);
  }

  // Print rules
  @if type-of($ruleset) == list {
    @include _civic-typography-print-rules($ruleset);
  }

  // Print breakpoints
  @if type-of($ruleset) == map {
    $breakpoints: map.keys($ruleset);

    @each $breakpoint in $breakpoints {
      $breakpoint-rules: map.get($ruleset, $breakpoint);

      @include civic-breakpoint($breakpoint) {
        @include _civic-typography-print-rules($breakpoint-rules);
      }
    }
  }
}

//
// Do not use directly.
// Use @include typography() mixin instead.
//
@mixin _civic-typography-print-rules($rules) {
  $font-size: list.nth($rules, 1);
  $line-height: list.nth($rules, 2);
  $font-weight: 'default';
  $font-family: 'none';
  $letter-spacing: normal;

  @if length($rules) >= 3 {
    $font-weight: list.nth($rules, 3);
  }

  @if length($rules) >= 4 {
    $font-family: list.nth($rules, 4);
  }

  @if length($rules) >= 5 {
    $letter-spacing: list.nth($rules, 5);
  }

  @include _civic-typography-font($font-size, $line-height, $font-weight, $font-family, $letter-spacing);
}

//
// Do not use directly.
// Use @include typography() mixin instead.
//
@mixin _civic-typography-font($font-size: 's', $line-height: 1.2em, $font-weight: 'default', $font-family: 'none', $letter-spacing: 'normal') {
  font-size: rem($font-size);
  line-height: $line-height;
  letter-spacing: $letter-spacing;

  @if $font-family != 'none' {
    font-family: map.get($civic-font, $font-family);
  }

  @if $font-weight != 'default' {
    font-weight: $font-weight;
  }
}
