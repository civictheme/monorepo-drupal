{#
/**
 * @file
 * Field component.
 *
 * Used as a main entry point to build any form fields.
 *
 * Variables:
 * - theme: [string] Theme: light, dark.
 * - type: [string] Type defined by a control type.
 * - direction: [string] Elements direction: vertical or horizontal.
 * - control_direction: [string] Elements direction within a control (if the control supports it): vertical or horizontal.
 * - label: [string] Label.
 * - description: [string] Description.
 * - is_required: [boolean] Denote if the field is required.
 * - is_invalid: [boolean] Denote if the field is invalid.
 * - is_disabled: [boolean] Denote if the field is disabled.
 * - control: [object] Object with control's properties:
 *   - name: [string] DOM name.
 *   - value: [string] DOM value.
 *   - id: [string] DOM id.
 *   - attributes: [string] Additional attributes.
 *   - modifier_class: [string] Additional classes.
 *   - items: [array] An array of items for group controls. Each item consists of:
 *     - label: [string] Child label.
 *     - value: [string] Child DOM value.
 *     - id: [string] DOM id.
 *     - is_checked: [boolean] Denote if the component is checked.
 *     - is_disabled: [boolean] Denote if the component is disabled.
 *     - is_invalid: [boolean] Denote if the component is invalid.
 * - attributes: [string] Additional attributes.
 * - modifier_class: [string] Additional classes.
 */
#}

{% set type = type not in ['textfield', 'textarea', 'select', 'radio-group', 'checkbox', 'checkbox-group', 'hidden'] ? 'hidden' : type %}
{% set theme_class = 'ct-theme-%s'|format(theme|default('light')) %}
{% set type_class =  'ct-field--%s'|format(type|default('input')) %}
{% set direction_class =  'ct-field--%s'|format(direction|default('horizontal')) %}
{% set is_required_class =  is_required ? 'ct-field--required' : '' %}
{% set is_disabled_class =  is_disabled ? 'ct-field--disabled' : '' %}
{% set modifier_class = '%s %s %s %s %s %s'|format(theme_class, type_class, direction_class, is_required_class, is_disabled_class, modifier_class|default('')) %}

{% if (control.name is defined and control.name is not empty) or (control.items is defined and control.items is not empty and control.items[0] is defined and control.items[0].name is defined  and control.items[0].name is not empty) %}
  {% set control = control | merge({
    theme: theme,
    is_disabled: is_disabled,
    is_invalid: is_invalid,
    is_required: is_required,
    modifier_class: 'ct-field__control ' ~ control.modifier_class,
  }) %}

  <div class="ct-field {{ modifier_class }}" {% if attributes %}{{ attributes|raw }}{% endif %}>
    {% set label_padded_class =  type in ['textfield', 'textarea', 'select'] and direction == 'horizontal' ? 'ct-field__label--padded' %}
    {% if label is not empty and type != 'hidden' %}
      {% include '@atoms/label/label.twig' with {
        theme: theme,
        content: label,
        is_required: is_required,
        for: control.id ? control.id : null,
        modifier_class: 'ct-field__label ' ~ label_padded_class,
      } only %}
    {% endif %}

    <div class="ct-field__wrapper">
      {% if type == 'textfield' %}
        {% include '@atoms/textfield/textfield.twig' with control only %}
      {% elseif type == 'textarea' %}
        {% include  '@atoms/textarea/textarea.twig' with control only %}
      {% elseif type == 'select' %}
        {% include '@atoms/select/select.twig' with control only %}
      {% elseif type == 'checkbox' %}
        {% include '@atoms/checkbox/checkbox.twig' with control only %}
      {% elseif type == 'checkbox-group' %}
        {% set control = control | merge({ direction: control_direction }) %}
        {% include '@atoms/checkbox-group/checkbox-group.twig' with control only %}
      {% elseif type == 'radio-group' %}
        {% set control = control | merge({ direction: control_direction }) %}
        {% include '@atoms/radio-group/radio-group.twig' with control only %}
      {% else %}
        <input
          type="{{ type }}"
          name="{{ control.name }}"
          {% if control.modifier_class %}class="{{ control.modifier_class }}"{% endif %}
          {% if control.value %}value="{{ control.value }}"{% endif %}
          {% if control.id %}id="{{ control.id }}"{% endif %}
          {% if control.attributes %}{{ control.attributes|raw }}{% endif %}
        />
      {% endif %}

      {% if description is not empty and type != 'hidden' %}
        {% include '@atoms/field-description/field-description.twig' with {
          theme: theme,
          size: 'regular',
          content: description,
          modifier_class: 'ct-field__description',
        } only %}
      {% endif %}

      {% if (message or is_invalid) and type != 'hidden' %}
        {% include '@atoms/field-message/field-message.twig' with {
          theme: theme,
          type: is_invalid ? 'error' : 'information',
          content: message ? message : (is_invalid ? (label is not empty ? 'Field <em>' ~  label ~ '</em> has an error' : 'Field has an error') : null),
          modifier_class: 'ct-field__message',
        } only %}
      {% endif %}
    </div>
  </div>
{% endif %}
