{#
/**
 * @file
 * Form element component.
 *
 * Variables:
 * - theme: [string] Theme: light, dark.
 * - type: [string] Type.
 * - name: [string] Name.
 * - description: [string] Description.
 * - attributes: [string] Additional attributes.
 * - modifier_class: [string] Additional classes.
 */
#}

{% set type = type not in ['textfield', 'textarea', 'select', 'radio-group', 'checkbox', 'checkbox-group', 'hidden'] ? 'hidden' : type %}
{% set theme_class = 'ct-theme-%s'|format(theme|default('light')) %}
{% set type_class =  'ct-form-element--%s'|format(type|default('input')) %}
{% set direction_class =  'ct-form-element--%s'|format(direction|default('horizontal')) %}
{% set is_required_class =  is_required ? 'ct-form-element--required' : '' %}
{% set is_disabled_class =  is_disabled ? 'ct-form-element--disabled' : '' %}
{% set modifier_class = '%s %s %s %s %s %s'|format(theme_class, type_class, direction_class, is_required_class, is_disabled_class, modifier_class|default('')) %}

{% if name is not empty %}
  {% set element = element | merge({
    theme: theme,
    name: name,
    is_disabled: is_disabled,
    is_invalid: is_invalid,
    is_required: is_required,
    modifier_class: 'ct-form-element__control ' ~ element.modifier_class,
  }) %}

  <div class="ct-form-element {{ modifier_class }}" {% if attributes %}{{ attributes|raw }}{% endif %}>
    {% set padded_class =  type in ['textfield', 'textarea', 'select'] and direction == 'horizontal' ? 'ct-form-element__label--padded' %}
    {% if label is not empty and type != 'hidden' %}
      {% include '@atoms/label/label.twig' with {
        theme: theme,
        content: label,
        is_required: is_required,
        for: element.id ? element.id : null,
        modifier_class: 'ct-form-element__label ' ~ padded_class,
      } only %}
    {% endif %}

    <div class="ct-form-element__wrapper">
      {% if type == 'textfield' %}
        {% include '@atoms/textfield/textfield.twig' with element only %}
      {% elseif type == 'textarea' %}
        {% include  '@atoms/textarea/textarea.twig' with element only %}
      {% elseif type == 'select' %}
        {% include '@atoms/select/select.twig' with element only %}
      {% elseif type == 'checkbox' %}
        {% include '@atoms/checkbox/checkbox.twig' with element only %}
      {% elseif type == 'checkbox-group' %}
        {% set element = element | merge({ direction: control_direction }) %}
        {% include '@atoms/checkbox-group/checkbox-group.twig' with element only %}
      {% elseif type == 'radio-group' %}
        {% set element = element | merge({ direction: control_direction }) %}
        {% include '@atoms/radio-group/radio-group.twig' with element only %}
      {% else %}
        <input
          type="{{ type }}"
          name="{{ element.name }}"
          {% if element.modifier_class %}class="{{ element.modifier_class }}"{% endif %}
          {% if element.value %}value="{{ element.value }}"{% endif %}
          {% if element.id %}id="{{ element.id }}"{% endif %}
          {% if element.attributes %}{{ element.attributes|raw }}{% endif %}
        />
      {% endif %}

      {% if description is not empty and type != 'hidden' %}
        {% include '@atoms/field-description/field-description.twig' with {
          theme: theme,
          size: 'regular',
          content: description,
          modifier_class: 'ct-form-element__description',
        } only %}
      {% endif %}

      {% if (message or is_invalid) and type != 'hidden' %}
        {% include '@atoms/field-message/field-message.twig' with {
          theme: theme,
          type: is_invalid ? 'error' : 'information',
          content: message ? message : (is_invalid ? (label is not empty ? 'Field <em>' ~  label ~ '</em> has an error' : 'Field has an error') : null),
          modifier_class: 'ct-form-element__message',
        } only %}
      {% endif %}
    </div>
  </div>
{% endif %}
