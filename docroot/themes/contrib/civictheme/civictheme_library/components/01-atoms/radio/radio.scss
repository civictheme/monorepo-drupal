//
// Radio component.
//

@use 'sass:math';

.ct-radio {
  $_control-width: $ct-radio-radius;
  $_control-height: $ct-radio-radius;

  // Helper to set the color of the checked element.
  // stylelint-disable-next-line scss/at-mixin-pattern
  @mixin _control-checked($color) {
    &::before {
      box-shadow: inset $_control-width $_control-height $color;
    }
  }

  $root: &;

  @include ct-form-element();

  display: grid;
  grid-template-columns: $_control-width auto;
  gap: ct-particle(1.5);

  #{$root}__control {
    @include ct-form-control(false, false);
    @include ct-form-control-no-appearance();

    border-radius: 50%;
    display: grid;
    height: $_control-height;
    place-content: center;
    width: $_control-width;

    // Adjust vertical position to be visually centered within the vertical
    // middle of the label based on the line height.
    transform: translateY(math.div($_control-height - ct-typography-rule('text-regular', 'line-height', 'm'), 2) + $ct-form-control-border-width * 2);

    &::before {
      content: '';
      width: math.div(math.floor(math.div($_control-width - 2 * 1.6 * math.max($ct-form-control-border-width, $ct-form-control-hover-border-width), 2) * 100) * 2, 100);
      height: math.div(math.floor(math.div($_control-height - 2 * 1.6 * math.max($ct-form-control-border-width, $ct-form-control-hover-border-width), 2) * 100) * 2, 100);
      border-radius: 50%;
      transform: scale(0);
      cursor: pointer;
      box-shadow: inset $_control-width $_control-height currentcolor;
    }

    &:checked {
      border-radius: 50%;
    }

    &:checked::before {
      transform: scale(1);
    }

    &:focus {
      border-radius: 50%;
    }
  }

  #{$root}__label {
    &[for] {
      cursor: pointer;
    }
  }

  &.ct-theme-light {
    #{$root}__control {
      @include ct-form-control-colors('light');

      &:checked {
        @include _control-checked($ct-form-control-light-border-color);
      }

      &:checked:hover {
        @include _control-checked($ct-form-control-light-hover-border-color);
      }
    }

    &#{$root}--invalid {
      #{$root}__control {
        @include ct-form-control-colors('light', 'invalid');

        &:checked {
          @include _control-checked($ct-form-control-light-invalid-border-color);
        }

        &:checked:hover {
          @include _control-checked($ct-form-control-light-invalid-border-color);
        }
      }
    }
  }

  &.ct-theme-dark {
    #{$root}__control {
      @include ct-form-control-colors('dark');

      &:checked {
        @include _control-checked($ct-form-control-dark-border-color);
      }

      &:checked:hover {
        @include _control-checked($ct-form-control-dark-hover-border-color);
      }
    }

    &#{$root}--invalid {
      #{$root}__control {
        @include ct-form-control-colors('dark', 'invalid');

        &:checked {
          @include _control-checked($ct-form-control-dark-invalid-border-color);
        }

        &:checked:hover {
          @include _control-checked($ct-form-control-dark-invalid-border-color);
        }
      }
    }
  }
}
