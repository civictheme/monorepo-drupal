//
// Message component.
//

@use 'sass:map';

.ct-message {
  $root: &;

  display: flex;
  flex-wrap: nowrap;
  justify-content: stretch;
  border-radius: $ct-message-border-radius;
  border-left: solid rem(6px) transparent;
  padding: ct-spacing(3) ct-spacing(3) ct-spacing(3) ct-spacing(1);
  margin: ct-spacing(3) 0;
  width: 100%;

  @include ct-typography('text-regular');

  #{$root}__icon {
    width: rem(26px);
    margin-right: ct-spacing(2);
  }

  .ct-icon {
    width: rem(26px);
    height: rem(26px);
  }

  #{$root}__title {
    font-weight: 600;
  }

  #{$root}__summary {
    margin-top: ct-spacing();
  }

  // SASS does not allow variables interpolation, so we are creating a local
  // map to easily generate rules.
  $map: (
    'information': (
      'light': (
        'color': $ct-message-light-information-color,
        'background-color': $ct-message-light-information-background-color,
        'border-color': $ct-message-light-information-border-color,
        'icon-color': $ct-message-light-information-icon-color,
      ),
      'dark': (
        'color': $ct-message-dark-information-color,
        'background-color': $ct-message-dark-information-background-color,
        'border-color': $ct-message-dark-information-border-color,
        'icon-color': $ct-message-dark-information-icon-color,
      )
    ),
    'warning': (
      'light': (
        'color': $ct-message-light-warning-color,
        'background-color': $ct-message-light-warning-background-color,
        'border-color': $ct-message-light-warning-border-color,
        'icon-color': $ct-message-light-warning-icon-color,
      ),
      'dark': (
        'color': $ct-message-dark-warning-color,
        'background-color': $ct-message-dark-warning-background-color,
        'border-color': $ct-message-dark-warning-border-color,
        'icon-color': $ct-message-dark-warning-icon-color,
      )
    ),
    'error': (
      'light': (
        'color': $ct-message-light-error-color,
        'background-color': $ct-message-light-error-background-color,
        'border-color': $ct-message-light-error-border-color,
        'icon-color': $ct-message-light-error-icon-color,
      ),
      'dark': (
        'color': $ct-message-dark-error-color,
        'background-color': $ct-message-dark-error-background-color,
        'border-color': $ct-message-dark-error-border-color,
        'icon-color': $ct-message-dark-error-icon-color,
      )
    ),
    'success': (
      'light': (
        'color': $ct-message-light-success-color,
        'background-color': $ct-message-light-success-background-color,
        'border-color': $ct-message-light-success-border-color,
        'icon-color': $ct-message-light-success-icon-color,
      ),
      'dark': (
        'color': $ct-message-dark-success-color,
        'background-color': $ct-message-dark-success-background-color,
        'border-color': $ct-message-dark-success-border-color,
        'icon-color': $ct-message-dark-success-icon-color,
      )
    ),
  );

  @each $type, $type-map in $map {
    &#{$root}--#{$type} {
      @each $theme, $values in $type-map {
        &.ct-theme-#{$theme} {
          background-color: map.get($values, 'background-color');
          color: map.get($values, 'color');
          border-color: map.get($values, 'border-color');

          #{$root}__icon {
            .ct-icon {
              @if $theme == 'light' {
                background-color: map.get($values, 'icon-color');
              }
            }
          }
        }
      }
    }
  }
}
