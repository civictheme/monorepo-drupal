//
// CivicTheme base default variables.
//
// Do not copy this file for customisations.
// Use `components/variables.base.scss` instead.
//
// Variables are split into 2 files:
// - _variables.base.scss - base variables that are used to calculate other
//   variables' values.
// - _variables.components.scss - variables that control the look of components.
//
// These are split into 2 files to allow changing base variables without the
// need to provide component variables in custom themes (e.g., to override
// primary color in child theme and have it propagate to components).
//
// Variables organisation rules:
// 1. Variables are grouped by their atomic type.
// 2. For every component, variables are ordered by:
//    a. generic values
//    b. light theme
//    c. dark theme
// 3. For every light theme variable, there is a dark theme counterpart.
// 4. Variables named according to the pattern:
//    $civictheme-[component]-[theme]-[?subcomponent]-[?state]-[rule]
//    where:
//    a. [component] is a hyphen delimited name of the component
//    b. [theme] is a theme name (light or dark)
//    c. [subcomponent] is an optional hyphen-delimited name of the subcomponent
//    d. [state] is a single or multiple hyphen-delimited name of the state
//    e. [rule] is an exact CSS rule name
//
//    Example 1:
//    $civictheme-link-light-visited-hover-background
//    [component]=link
//    [theme]=light
//    [state]=hover over visited
//    [rule]=background-color
//
//    Example 2:
//    $civictheme-secondary-navigation-light-menu-item-active-background-color
//    [component]=secondary-navigation
//    [theme]=light
//    [subcomponent]=menu-item
//    [state]=active
//    [rule]=background-color

@use 'sass:map';
@use 'sass:math';
@use 'sass:color';
@import 'mixins';

//
// Assets directory.
//
$civictheme-assets-directory: './assets/' !default;

//
// Colors.
//
// Components are using colors and color variants.
//
// Use $civictheme-colors to override any color values. It is available (and empty)
// so that any sub-themes could specify their colors in here to override
// the defaults. This allows CivicTheme to make palette additions without breaking
// sub-themes.
$civictheme-colors: () !default;

// Default CivicTheme colors palette.
$civictheme-colors-default: (
  'primary': #00698f,
  'secondary': #61daff,
  'outline': #8258c4,
  'status': #007cbf,
  'warning': #c95100,
  'error': #ce3836,
  'success': #008583,
);

// Color variants are derivatives of the colors above, mapped to some sensible
// defaults using shades.
//
// Use $civictheme-colors-variants to override any color variant values  values.
// It is available (and empty) so that any sub-themes could specify their colors
// variants in here to override the defaults. This allows CivicTheme to make
// palette additions without breaking sub-themes.

$civictheme-colors-variants: () !default;

// Default CivicTheme colors palette.
$civictheme-colors-variants-default: (
  'primary-variant1': civictheme-color-tint(90, civictheme-color('primary')),
  'primary-variant2': civictheme-color-shade(15, civictheme-color('primary')),
  'primary-variant3': civictheme-color-shade(30, civictheme-color('primary')),
  'primary-variant4': civictheme-color-shade(45, civictheme-color('primary')),
  'primary-variant5': civictheme-color-shade(60, civictheme-color('primary')),
  'neutral-variant1': civictheme-color-tone(0, civictheme-color('primary')),
  'neutral-variant2': civictheme-color-tone(5, civictheme-color('primary')),
  'neutral-variant3': civictheme-color-tone(10, civictheme-color('primary')),
  'neutral-variant4': civictheme-color-tone(20, civictheme-color('primary')),
  'neutral-variant5': civictheme-color-tone(40, civictheme-color('primary')),
  'neutral-variant6': civictheme-color-tone(60, civictheme-color('primary')),
  'neutral-variant7': civictheme-color-tone(80, civictheme-color('primary')),
  'neutral-variant8': civictheme-color-tone(90, civictheme-color('primary')),
);

// Theme-based background colors for components.
$civictheme-theme-light-background-color: civictheme-color('neutral', 1);
$civictheme-theme-dark-background-color: civictheme-color('primary', 4);
$civictheme-background-blend-mode: soft-light;

//
// Spacing.
//
// Do not use these directly.
// Use @include civictheme-space() function instead.
//
$civictheme-space: 0.5rem !default; // 8px

//
// Breakpoints.
//
// The value denotes the "start" of the breakpoint range.
//
// Do not use these directly.
// Use @include civictheme-breakpoint() mixin instead.
//
$civictheme-breakpoints: (
  'xxs': 0,
  'xs': 368px,
  's': 576px,
  'm': 768px,
  'l': 992px,
  'xl': 1280px,
  'xxl': 1440px
) !default;

//
// Grid.
//
// Any updates made to the grid system update the documentation at: `/civictheme_library/docs/grid.md`
$civictheme-grid-columns: 12 !default;

// Grid spacing used to calculate gutter spacings. Since the grid is based on
// pixel values instead of rems (for consistency), the spacing is also based on
// pixel values.
$civictheme-grid-space: 8px !default;

// The lowest breakpoint where column classes should start applying.
$civictheme-grid-lowest-breakpoint: 'xxs' !default;

// The width of the fluid container at max width. Used to contain fluid
// containers on wide screens. Set to 'auto' to keep fluid.
$civictheme-grid-max-width: map.get($civictheme-breakpoints, 'xxl') !default;

// Spacing between columns in a row.
$civictheme-grid-gutters: (
  'xxs': $civictheme-grid-space * 2,
  'xs': $civictheme-grid-space * 2,
  's': $civictheme-grid-space * 3
) !default;

// Side spacing between the edge of the viewport and a start of the grid.
$civictheme-grid-offsets: (
  'xxs': $civictheme-grid-space * 3,
  'xs': $civictheme-grid-space * 3,
  's': $civictheme-grid-space * 3,
  'm': $civictheme-grid-space * 3,
  'l': $civictheme-grid-space * 6,
  'xl': $civictheme-grid-space * 6,
  'xxl': $civictheme-grid-space * 12,
) !default;

//
// Visibility.
//
// The lowest breakpoint where visibility classes should apply.
$civictheme-visibility-lowest-breakpoint: 'xxs' !default;

//
// Fonts.
//

// Use $civictheme-fonts to override any font family values. It is available
// (and empty) so that any sub-themes could specify their fonts in here to
// override the defaults. This allows CivicTheme to make font additions without
// breaking sub-themes.
$civictheme-fonts: () !default;
$civictheme-fonts-default: (
  'primary': (
    'family': '"Lexend", sans-serif',
    'types': (
      (
        'uri': 'https://fonts.googleapis.com/css2?family=Lexend:wght@400;500;600;700&display=swap',
      ),
    ),
  ),
  'secondary': (
    'family': '"Public Sans", sans-serif',
    'types': (
      (
        'uri': 'https://fonts.googleapis.com/css2?family=Public+Sans:wght@400;500;600&display=swap',
      ),
    ),
  ),
);

// Add custom fonts to $civictheme-fonts with the same key as above to override
// fonts or with a new key to add a new font kind.
// 'uri' can be a URL to the external font or a list of local files with
// extensions to be imported. The font type will be taken from the file extensions.
// Use $civictheme-assets-directory to provide a relative path.
//
// IMPORTANT: Make sure to put commas at the end of every list or SASS will not
// be able to distinguish lists and values.
//
// Example:
//
// $civictheme-fonts: (
//   'tertiary': (
//     'family': 'Roboto',
//     'types': (
//       (
//         'uri': (
//           '#{$civictheme-assets-directory}fonts/roboto/Roboto-Regular.ttf',
//           '#{$civictheme-assets-directory}fonts/roboto/Roboto-Regular.woff',
//           '#{$civictheme-assets-directory}fonts/roboto/Roboto-Regular.eot',
//         ),
//       ),
//       (
//         'italic': true,
//         'weight': 'bold',
//         'uri': (
//           '#{$civictheme-assets-directory}fonts/roboto/Roboto-BoldItalic.ttf',
//           '#{$civictheme-assets-directory}fonts/roboto/Roboto-BoldItalic.woff',
//           '#{$civictheme-assets-directory}fonts/roboto/Roboto-BoldItalic.eot',
//         ),
//       ),
//     ),
//   ),
// );

//
// Typography.
//
// Base font size.
$civictheme-font-base-size: 16px !default;
$civictheme-font-base-line-height: $civictheme-font-base-size !default;
$civictheme-typography: () !default;
$civictheme-typography-default: (
  // Headings.
  'heading-1': (
    'xxs': ($civictheme-font-base-size * 2, $civictheme-font-base-line-height * 2.5, 700, 'primary', -0.6px),
    'm': ($civictheme-font-base-size * 3, $civictheme-font-base-line-height * 3.75, 700, 'primary', -1px)
  ),
  'heading-2': (
    'xxs': ($civictheme-font-base-size * 1.75, $civictheme-font-base-line-height * 2.25, 700, 'primary', -0.5px),
    'm': ($civictheme-font-base-size * 2.5, $civictheme-font-base-line-height * 3, 700, 'primary', -0.8px)
  ),
  'heading-3': (
    'xxs': ($civictheme-font-base-size * 1.5, $civictheme-font-base-line-height * 2, 700, 'primary', -0.35px),
    'm': ($civictheme-font-base-size * 2, $civictheme-font-base-line-height * 2.5, 700, 'primary', -0.6px)
  ),
  'heading-4': (
    'xxs': ($civictheme-font-base-size * 1.25, $civictheme-font-base-line-height * 1.5, 700, 'primary', -0.25px),
    'm': ($civictheme-font-base-size * 1.5, $civictheme-font-base-line-height * 2, 700, 'primary', -0.4px)
  ),
  'heading-5': (
    'xxs': ($civictheme-font-base-size, $civictheme-font-base-line-height * 1.375, 700, 'primary', 0),
    'm': ($civictheme-font-base-size * 1.25, $civictheme-font-base-line-height * 1.5, 700, 'primary', -0.2px)
  ),
  'heading-6': ($civictheme-font-base-size, $civictheme-font-base-line-height * 1.625, 700, 'primary', 0),
  // Text.
  'text-extra-large': (
    'xxs': ($civictheme-font-base-size * 1.25, $civictheme-font-base-line-height * 1.5, 400, 'primary', -0.1px),
    'm': ($civictheme-font-base-size * 1.5, $civictheme-font-base-line-height * 1.5, 400, 'primary', 0)
  ),
  'text-large': (
    'xxs': ($civictheme-font-base-size * 1.125, $civictheme-font-base-line-height * 1.75, 400, 'primary', 0),
    'm': ($civictheme-font-base-size * 1.25, $civictheme-font-base-line-height * 2.125, 400, 'primary', 0)
  ),
  'text-regular': (
    'xxs': ($civictheme-font-base-size * 0.875, $civictheme-font-base-line-height * 1.5, 400, 'primary', 0),
    'm': ($civictheme-font-base-size, $civictheme-font-base-line-height * 1.75, 400, 'primary', 0)
  ),
  'text-small': (
    'xxs': ($civictheme-font-base-size * 0.75, $civictheme-font-base-line-height * 1.25, 400, 'primary', 0),
    'm': ($civictheme-font-base-size * 0.875, $civictheme-font-base-line-height * 1.5, 400, 'primary', 0),
  ),
  // Labels.
  'label-extra-large': (
    'xxs': ($civictheme-font-base-size * 1.25, $civictheme-font-base-line-height * 1.5, 600, 'primary', -0.1px),
    'm': ($civictheme-font-base-size * 1.5, $civictheme-font-base-line-height * 1.5, 600, 'primary', 0)
  ),
  'label-large': (
    'xxs': ($civictheme-font-base-size * 1.125, $civictheme-font-base-line-height * 1.5, 600, 'primary', -0.1px),
    'm': ($civictheme-font-base-size * 1.125, $civictheme-font-base-line-height * 1.5, 600, 'primary', 0)
  ),
  'label-regular': (
    'xxs': ($civictheme-font-base-size, $civictheme-font-base-line-height * 1.25, 500, 'primary', -0.1px),
    'm': ($civictheme-font-base-size, $civictheme-font-base-line-height * 1.25, 500, 'primary', 0)
  ),
  'label-small': (
    'xxs': ($civictheme-font-base-size * 0.75, $civictheme-font-base-line-height * 1.25, 400, 'primary', -0.1px),
    'm': ($civictheme-font-base-size * 0.875, $civictheme-font-base-line-height * 1.125, 400, 'primary', 0)
  ),
  'label-extra-small': (
    'xxs': ($civictheme-font-base-size * 0.5, $civictheme-font-base-line-height * 1.25, 400, 'primary', -0.1px),
    'm': ($civictheme-font-base-size * 0.75, $civictheme-font-base-line-height * 1.125, 400, 'primary', 0)
  ),
  // Special elements.
  'quote': (
    'xxs': ($civictheme-font-base-size * 1.25, $civictheme-font-base-line-height * 1.185, 400, 'primary', -0.15px),
    'm': ($civictheme-font-base-size * 1.5, $civictheme-font-base-size * 2.5, 400, 'primary', -0.35px)
  ),
);

// Font smoothing.
$civictheme-font-smoothing-enable: true !default;

//
// Icon size.
//
$civictheme-icon-sizes: () !default;
$civictheme-icon-sizes-default: (
  'extra-large': (
    'xxs': (48px, 48px),
    'm': (64px, 64px),
  ),
  'large': (
    'xxs': (40px, 40px),
    'm': (48px, 48px),
  ),
  'regular': (
    'xxs': (20px, 20px),
    'm': (24px, 24px),
  ),
  'small': (
    'xxs': (16px, 16px),
    'm': (20px, 20px),
  ),
  'extra-small': (
    'xxs': (14px, 14px),
    'm': (16px, 16px),
  )
);

//
// Icon symbols.
//
$civictheme-icon-symbols: () !default;
$civictheme-icon-symbols-default: (
  'account': 'account',
  'approve': 'approve',
  'bars': 'bars',
  'bullet': 'bullet',
  'calendar-1': 'calendar-1',
  'calendar-2': 'calendar-2',
  'call': 'call',
  'cancel': 'cancel',
  'checked': 'checked',
  'close-outline': 'close-outline',
  'close': 'close',
  'down-arrow-1': 'down-arrow-1',
  'down-arrow-2': 'down-arrow-2',
  'down-arrow-large': 'down-arrow-large',
  'download-file': 'download-file',
  'download': 'download',
  'exclamation-mark-1': 'exclamation-mark-1',
  'exclamation-mark-2': 'exclamation-mark-2',
  'exclamation-mark-3': 'exclamation-mark-3',
  'eye': 'eye',
  'facebook': 'facebook',
  'help': 'help',
  'image': 'image',
  'information-mark': 'information-mark',
  'left-arrow-outline': 'left-arrow-outline',
  'left-arrow': 'left-arrow',
  'linkedin': 'linkedin',
  'magnifier': 'magnifier',
  'map': 'map',
  'megaphone': 'megaphone',
  'mortarboard': 'mortarboard',
  'newspaper': 'newspaper',
  'pdf-file': 'pdf-file',
  'progress': 'progress',
  'right-arrow-1': 'right-arrow-1',
  'right-arrow-2': 'right-arrow-2',
  'select-box': 'select-box',
  'share': 'share',
  'square': 'square',
  'to-do': 'to-do',
  'twitter': 'twitter',
  'up-arrow-large': 'up-arrow-large',
  'up-arrow': 'up-arrow',
  'upper-arrow': 'upper-arrow',
  'upper-right-arrow': 'upper-right-arrow',
  'watch': 'watch',
  'word-file': 'word-file'
);

//
// Elevations.
//
$civictheme-elevations: (
  0 2px civictheme-space(1) rgba(0, 0, 0, 20%),
  0 civictheme-space(0.5) civictheme-space(2) rgba(0, 0, 0, 20%),
  0 civictheme-space(1) civictheme-space(4) rgba(0, 0, 0, 20%),
  0 civictheme-space(2) civictheme-space(8) rgba(0, 0, 0, 20%),
) !default;

//
// Flyout.
//
$civictheme-flyout-duration: 0.5s !default;
$civictheme-flyout-direction-transforms: (
  'right': translateX(100%),
  'left': translateX(-100%),
  'top': translateY(-100%),
  'bottom': translateY(100%),
) !default;
$civictheme-flyout-zindex: 1000 !default;

//
// Misc Variables.
//

// Border radius.
$civictheme-border-radius: 0.25rem !default;
