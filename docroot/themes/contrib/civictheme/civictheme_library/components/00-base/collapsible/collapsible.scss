//
// Collapsible component.
//

@use 'sass:list';
@use 'sass:map';

[data-collapsible] {
  $root: ct-collapsible;

  [data-collapsible-trigger] {
    cursor: pointer;
  }

  &:not([data-collapsible-trigger-no-icon]) {
    [data-collapsible-trigger] {
      padding-right: ct-icon-size-dimension('regular', $ct-collapsible-icon-size, 'width');
      position: relative;

      &::after {
        @include ct-icon-size('regular');

        content: $ct-collapsible-icon;
        position: absolute;
        right: ct-icon-size-dimension('regular', $ct-collapsible-icon-size, 'width');
        transform: rotate(-180deg);
        line-height: 0;
      }
    }
  }

  &:not([data-collapsible-duration='0']) {
    [data-collapsible-trigger] {
      &::after {
        transition: transform 0.5s;
      }
    }
  }

  &[data-collapsible-collapsing] {
    [data-collapsible-trigger] {
      &::after {
        transform: rotate(0deg);
      }
    }

    &[data-collapsible-collapsed] {
      [data-collapsible-trigger] {
        &::after {
          transform: rotate(-180deg);
        }
      }
    }
  }

  &[data-collapsible-collapsed] {
    [data-collapsible-trigger] {
      &::after {
        transform: rotate(0deg);
      }
    }

    [data-collapsible-panel] {
      height: 0;
      overflow: hidden;

      @include ct-print() {
        height: auto;
        visibility: visible;
      }
    }
  }

  @include ct-component-theme($root) using($root, $theme) {
    @include ct-component-property($root, $theme, color);

    &:not([data-collapsible-trigger-no-icon]) {
      @include ct-icon-collapsible(ct-component-var($root, $theme, icon, color));
    }
  }
}
