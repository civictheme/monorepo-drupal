#
# CircleCI 2.0 configuration file.
#
# This configuration file uses the "docker" executor. A "runner" container,
# created from a specified Docker image, is used to checkout source code and
# run commands defined in this file. Application Docker containers defined in
# docker-compose.yml run on a *remote* Docker server controlled by CircleCI.
# The "runner" container uses Docker client to control the remote Docker server.
#
# current paragraph) are explaining DrevOps inner workings and can be safely
# removed for your project. They are automatically removed when installing or
# updating DrevOps.
version: '2.1'

################################################################################
# VARIABLES
################################################################################
# For YAML support of anchors and references, see http://blog.daemonl.com/2016/02/yaml.html
aliases:
  #-----------------------------------------------------------------------------
  # Per-project variables.
  #-----------------------------------------------------------------------------

  # Timezone of the runner container to ensure that DB cache key uses correct date.
  - &timezone "Australia/Melbourne"

  # SSH key fingerprint to deploy code.
  # Generate a separate SSH key for a user who has push permissions to
  # $DREVOPS_DEPLOY_ARTIFACT_GIT_REMOTE repo with `ssh-keygen -m PEM -t rsa -C "deployer@example.com"
  # command and add private key under "SSH Permissions" in CircleCI UI.
  - &deploy_ssh_fingerprint "bc:87:4a:74:cf:e0:02:4e:34:aa:16:b5:c3:6f:89:cd"

  # SSH key fingerprint to deploy code to civictheme.
  - &deploy_ssh_fingerprint1 "b7:05:38:98:47:28:c7:1f:d8:6d:7a:75:3c:13:5b:af"

  # SSH key fingerprint to deploy code to civictheme_library.
  - &deploy_ssh_fingerprint2 "12:06:0e:75:93:10:3b:b4:59:fe:11:75:11:22:20:dd"

  # SSH key fingerprint to deploy code to civictheme_govcms.
  - &deploy_ssh_fingerprint3 "a9:33:24:68:20:f9:91:24:b8:38:c5:f3:b6:4b:34:5d"

  # SSH key fingerprint to deploy code to civictheme_content.
  - &deploy_ssh_fingerprint4 "a3:41:d1:47:85:4c:5d:12:9c:4c:1f:a2:67:d3:a5:3f"

  # SSH key fingerprint to deploy code to civictheme_admin.
  - &deploy_ssh_fingerprint5 "ab:76:65:9f:76:02:c2:b9:2a:bc:81:db:a0:c6:37:59"

  # SSH key fingerprint to mirror code.
  - &git_mirror_ssh_fingerprint "88:48:44:13:07:7a:a7:da:8c:fb:5e:a7:62:45:73:c4"

  #-----------------------------------------------------------------------------
  # Optional variables.
  #-----------------------------------------------------------------------------

  # CI runner resource class.
  # @see https://circleci.com/docs/2.0/configuration-reference/#resource_class
  # Change to 'large' for faster builds. Requires lodging a support request
  # with CircleCI o enable this feature.
  - &resource_class large

  # Docker Layer Caching allows to significantly speed up builds by caching
  # images built during previous runs.
  # @see https://circleci.com/docs/2.0/docker-layer-caching/
  # Change to 'true' (without single quotes) to enable. Requires lodging a
  # support request with CircleCI to enable this feature.
  - &docker_layer_caching false

  - &renovatebot_repository 'salsadigitalauorg/civictheme_source'
  # The author details to use for commits made by RenovateBot.
  - &renovatebot_git_author 'RenovateBot Self Hosted <deployer@salsadigital.com.au>'
  # The schedule to run RenovateBot on.
  - &renovatebot_schedule "5 23 * * *"
  # Set to 'false' (without single quotes) once the setup is complete and
  # the bot ran at least once without errors.
  - &renovatebot_dry_run false
  # The branch to run RenovateBot on.
  - &renovatebot_branch develop

  #-----------------------------------------------------------------------------

  # Shared configuration applied to each job.
  - &container_config
    #
    # Location of checked-out files within "runner" container.
    working_directory: &working_directory /root/project
    environment:
      DREVOPS_DEPLOY_SSH_FINGERPRINT: *deploy_ssh_fingerprint
      DEPLOY_SSH_FINGERPRINT1: *deploy_ssh_fingerprint1
      DEPLOY_SSH_FINGERPRINT2: *deploy_ssh_fingerprint2
      DEPLOY_SSH_FINGERPRINT3: *deploy_ssh_fingerprint3
      DEPLOY_SSH_FINGERPRINT4: *deploy_ssh_fingerprint4
      DEPLOY_SSH_FINGERPRINT5: *deploy_ssh_fingerprint5
      GIT_MIRROR_SSH_FINGERPRINT: *git_mirror_ssh_fingerprint
    docker:
      - image: drevops/ci-runner:23.10.0
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
        environment:
          # Set runner timezone to ensure that executed operations use correct timestamps.
          TZ: *timezone
          # Set runner terminal capabilities.
          TERM: xterm-256color
          # Directory to store test results.
          DREVOPS_CI_TEST_RESULTS: &test_results /tmp/tests
          # Directory to store test artifacts.
          DREVOPS_CI_ARTIFACTS: &artifacts /tmp/artifacts
          # Check only minimal stack requirements.
          DREVOPS_DOCTOR_CHECK_MINIMAL: 1
          # Directory to store code exported between jobs.
          DREVOPS_EXPORT_CODE_DIR: &drevops_build_export_dir /workspace/code
          # Directory to use for artifact deployments.
          DREVOPS_DEPLOY_ARTIFACT_SRC: *drevops_build_export_dir
          # Source code location for artifact deployments.
          DREVOPS_DEPLOY_ARTIFACT_ROOT: *working_directory
          # Report file location for artifact deployments.
          DREVOPS_DEPLOY_ARTIFACT_REPORT_FILE: /tmp/artifacts/deployment_report.txt
    resource_class: *resource_class

  # Set up remote docker.
  - &step_setup_remote_docker
    setup_remote_docker:
      docker_layer_caching: *docker_layer_caching
      version: 20.10.18

  # Set up Docker network.
  - &step_setup_docker_network
    run: docker network prune -f >/dev/null 2>&1 && docker network inspect amazeeio-network >/dev/null 2>&1 || docker network create amazeeio-network >/dev/null 2>&1 || true

  # Process the codebase to be run in CI environment.
  - &step_process_codebase
    run:
      name: Process codebase to run in CI
      command: |
        find . -name "docker-compose.yml" -print0 | xargs -0 -I {} sh -c "sed -i -e ''/###/d'' {} && sed -i -e ''s/##//'' {}"
        # Alter build for an alternative build setup.
        if [ "$CIVICTHEME_INSTALL_SIBLING" = "1" ]; then cp -f .docker/cli.sibling.dockerfile .docker/cli.dockerfile; fi
        if [ "$CIVICTHEME_LIBRARY_INSTALL_SKIP" = "1" ]; then cp -f .docker/cli.onlytheme.dockerfile .docker/cli.dockerfile; fi

################################################################################
# JOBS
################################################################################

job-build: &job-build
  parallelism: 2
  steps:
    - attach_workspace:
        at: /workspace
    - checkout
    - *step_process_codebase
    - *step_setup_remote_docker
    - *step_setup_docker_network
    - run:
        name: Lint docs spelling
        command: ./scripts/lint-spelling.sh
    - run:
        name: Build site
        command: ./scripts/drevops/build.sh
        no_output_timeout: 30m
    - run:
        name: Lint code with PHPCS
        command: docker compose exec -T cli vendor/bin/phpcs || [ "${DREVOPS_CI_PHPCS_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint code with PHPStan
        command: docker compose exec -T cli vendor/bin/phpstan || [ "${DREVOPS_CI_PHPSTAN_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint code with PHPMD
        command: docker compose exec -T cli vendor/bin/phpmd . text phpmd.xml || [ "${DREVOPS_CI_PHPMD_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint code with Twigcs
        command: docker compose exec -T cli vendor/bin/twigcs || [ "${DREVOPS_CI_TWIGCS_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint code with NPM linters
        command: docker compose exec -T cli bash -c "npm run --prefix \${DREVOPS_WEBROOT}/themes/contrib/\${DRUPAL_THEME} lint" || [ "${DREVOPS_CI_NPM_LINT_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint Drupal theme configuration
        command: docker compose exec -T cli bash -c "./scripts/lint-theme-config.sh" || [ "${DREVOPS_CI_DRUPAL_THEME_CONFIG_LINT_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint Drupal theme schema
        command: docker compose exec -T cli bash -c "./vendor/bin/drush inspect_config civictheme.settings --detail --only-error"
    - run:
        name: Run tooling tests
        command: ./scripts/test-tooling.sh
    - run:
        name: Test with PHPUnit
        command: |
          XDEBUG_ENABLE=true docker compose up -d cli php nginx # Restart stack with XDEBUG enabled for coverage.
          docker compose exec -T -e XDEBUG_MODE=coverage cli vendor/bin/phpunit || [ "${DREVOPS_CI_PHPUNIT_IGNORE_FAILURE:-0}" -eq 1 ]
          docker compose up -d cli php nginx # Restart stack without XDEBUG enabled for coverage.
    - run:
        name: Test with Behat
        command: |
          if [ "${CIRCLE_NODE_TOTAL:-1}" -gt 1 ]; then export DREVOPS_CI_BEHAT_PROFILE="${DREVOPS_CI_BEHAT_PROFILE:-p${CIRCLE_NODE_INDEX}}"; fi
          echo "Running with ${DREVOPS_CI_BEHAT_PROFILE:-default} profile"
          docker compose exec -T cli php -d memory_limit=-1 vendor/bin/behat --colors --strict --profile="${DREVOPS_CI_BEHAT_PROFILE:-default}" || \
            docker compose exec -T cli php -d memory_limit=-1 vendor/bin/behat --colors --strict --rerun --profile="${DREVOPS_CI_BEHAT_PROFILE:-default}" || \
            [ "${DREVOPS_CI_BEHAT_IGNORE_FAILURE:-0}" -eq 1 ]
        no_output_timeout: 30m
    - run:
        name: Process test logs and artifacts
        command: |
          if docker compose ps --services --filter "status=running" | grep -q cli; then
            mkdir -p "${DREVOPS_CI_TEST_RESULTS}" && docker compose cp cli:/app/.logs/test_results/. "${DREVOPS_CI_TEST_RESULTS}/"
            mkdir -p "${DREVOPS_CI_ARTIFACTS}" && docker compose cp cli:/app/.logs/. "${DREVOPS_CI_ARTIFACTS}/"
          fi
        when: always
    - store_test_results:
        path: *test_results
    - store_artifacts:
        path: *artifacts
    - persist_to_workspace:
        root: /workspace
        paths:
          - code

# Exactly as above, but no persisting of the code at the end of the build.
# @see https://github.com/yaml/yaml/issues/35
job-build-no-persist: &job-build-no-persist
  parallelism: 2
  steps:
    - attach_workspace:
        at: /workspace
    - checkout
    - *step_process_codebase
    - *step_setup_remote_docker
    - *step_setup_docker_network
    - run:
        name: Lint docs spelling
        command: ./scripts/lint-spelling.sh
    - run:
        name: Build site
        command: ./scripts/drevops/build.sh
        no_output_timeout: 30m
    - run:
        name: Lint code with PHPCS
        command: docker compose exec -T cli vendor/bin/phpcs || [ "${DREVOPS_CI_PHPCS_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint code with PHPStan
        command: docker compose exec -T cli vendor/bin/phpstan || [ "${DREVOPS_CI_PHPSTAN_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint code with PHPMD
        command: docker compose exec -T cli vendor/bin/phpmd . text phpmd.xml || [ "${DREVOPS_CI_PHPMD_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint code with Twigcs
        command: docker compose exec -T cli vendor/bin/twigcs || [ "${DREVOPS_CI_TWIGCS_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint code with NPM linters
        command: docker compose exec -T cli bash -c "npm run --prefix \${DREVOPS_WEBROOT}/themes/contrib/\${DRUPAL_THEME} lint" || [ "${DREVOPS_CI_NPM_LINT_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint Drupal theme configuration
        command: docker compose exec -T cli bash -c "./scripts/lint-theme-config.sh" || [ "${DREVOPS_CI_DRUPAL_THEME_CONFIG_LINT_IGNORE_FAILURE:-0}" -eq 1 ]
    - run:
        name: Lint Drupal theme schema
        command: docker compose exec -T cli bash -c "./vendor/bin/drush inspect_config civictheme.settings --detail --only-error"
    - run:
        name: Run tooling tests
        command: ./scripts/test-tooling.sh
    - run:
        name: Test with PHPUnit
        command: |
          XDEBUG_ENABLE=true docker compose up -d cli php nginx # Restart stack with XDEBUG enabled for coverage.
          docker compose exec -T -e XDEBUG_MODE=coverage cli vendor/bin/phpunit || [ "${DREVOPS_CI_PHPUNIT_IGNORE_FAILURE:-0}" -eq 1 ]
          docker compose up -d cli php nginx # Restart stack without XDEBUG enabled for coverage.
    - run:
        name: Test with Behat
        command: |
          if [ "${CIRCLE_NODE_TOTAL:-1}" -gt 1 ]; then export DREVOPS_CI_BEHAT_PROFILE="${DREVOPS_CI_BEHAT_PROFILE:-p${CIRCLE_NODE_INDEX}}"; fi
          echo "Running with ${DREVOPS_CI_BEHAT_PROFILE:-default} profile"
          docker compose exec -T cli php -d memory_limit=-1 vendor/bin/behat --colors --strict --profile="${DREVOPS_CI_BEHAT_PROFILE:-default}" || \
            docker compose exec -T cli php -d memory_limit=-1 vendor/bin/behat --colors --strict --rerun --profile="${DREVOPS_CI_BEHAT_PROFILE:-default}" || \
            [ "${DREVOPS_CI_BEHAT_IGNORE_FAILURE:-0}" -eq 1 ]
        no_output_timeout: 30m
    - run:
        name: Process test logs and artifacts
        command: |
          if docker compose ps --services --filter "status=running" | grep -q cli; then
            mkdir -p "${DREVOPS_CI_TEST_RESULTS}" && docker compose cp cli:/app/.logs/test_results/. "${DREVOPS_CI_TEST_RESULTS}/"
            mkdir -p "${DREVOPS_CI_ARTIFACTS}" && docker compose cp cli:/app/.logs/. "${DREVOPS_CI_ARTIFACTS}/"
          fi
        when: always
    - store_test_results:
        path: *test_results
    - store_artifacts:
        path: *artifacts

# Job to run isolated theme build.
job-build-theme-isolated: &job-build-theme-isolated
  steps:
    - checkout
    - run: mkdir -p ~/project2 && cp -r web/themes/contrib/civictheme ~/project2
    - run: cd ~/project2/civictheme; ./.circleci/build.sh
    - run: cd ~/project2/civictheme; ./.circleci/lint.sh
    - run: cd ~/project2/civictheme; ./.circleci/test.sh
    - run:
        command: cd ~/project2/civictheme; ./.circleci/process-artifacts.sh
        when: always
    - store_test_results:
        path: /tmp/test_results
    - store_artifacts:
        path: /tmp/artifacts

job-mirror: &job-mirror
  steps:
    - attach_workspace:
        at: /workspace
    - add_ssh_keys:
        fingerprints:
          - *deploy_ssh_fingerprint
          - *git_mirror_ssh_fingerprint
    - checkout
    - *step_process_codebase
    - checkout
    - run:
        name: Re-deploy environment.
        # We do not have a standalone branch for 'default' profile because we
        # are using `develop` branch to build with 'default' profile.
        command: |
          set -x
          branches=()
          branches+=(content/corporate)
          branches+=(content/government)
          branches+=(content/highereducation)
          if [ "$MIRROR_CONTENT_BRANCHES_PROCEED" == "1" ]; then
            for branch in "${branches[@]}"
            do
              GIT_MIRROR_BRANCH_DST="${branch}" GIT_MIRROR_BRANCH=develop ./scripts/git-mirror.sh
              sleep 5
              DREVOPS_DEPLOY_LAGOON_BRANCH="${branch}" DEPLOY_ACTION=deploy_override_db ahoy deploy
            done
          fi

jobs:

  build:
    <<: *container_config
    <<: *job-build-no-persist

  # No subtheme.
  build-no-subtheme:
    <<: *container_config
    environment:
      CIVICTHEME_SUBTHEME_ACTIVATION_SKIP: 1
      CIVICTHEME_LIBRARY_INSTALL_SKIP: 1
    <<: *job-build-no-persist

  # GovCMS profile, subtheme. Longest test run.
  build-govcms:
    <<: *container_config
    environment:
      DRUPAL_PROFILE: govcms
      DREVOPS_CI_DRUPAL_THEME_CONFIG_LINT_IGNORE_FAILURE: 1
    <<: *job-build-no-persist

  # GovCMS profile, no subtheme.
  build-govcms-no-subtheme:
    <<: *container_config
    environment:
      DRUPAL_PROFILE: govcms
      CIVICTHEME_SUBTHEME_ACTIVATION_SKIP: 1
      CIVICTHEME_LIBRARY_INSTALL_SKIP: 1
      DREVOPS_CI_DRUPAL_THEME_CONFIG_LINT_IGNORE_FAILURE: 1
    <<: *job-build

  # GovCMS profile, subtheme is a sibling.
  build-govcms-sibling:
    <<: *container_config
    environment:
      DRUPAL_PROFILE: govcms
      CIVICTHEME_INSTALL_SIBLING: 1
      DREVOPS_CI_DRUPAL_THEME_CONFIG_LINT_IGNORE_FAILURE: 1
      DREVOPS_CI_BEHAT_PROFILE: smoke
    <<: *job-build-no-persist

  # Drupal 10, minimal profile, 'corporate' content profile.
  build-content-corporate:
    <<: *container_config
    environment:
      CIVICTHEME_CONTENT_PROFILE: corporate
      CIVICTHEME_SUBTHEME_ACTIVATION_SKIP: 1
      CIVICTHEME_LIBRARY_INSTALL_SKIP: 1
      DREVOPS_CI_DRUPAL_THEME_CONFIG_LINT_IGNORE_FAILURE: 1
      DREVOPS_CI_BEHAT_PROFILE: smoke
    <<: *job-build-no-persist

  # Drupal 10, minimal profile, 'highereducation' content profile.
  build-content-highereducation:
    <<: *container_config
    environment:
      CIVICTHEME_CONTENT_PROFILE: highereducation
      CIVICTHEME_SUBTHEME_ACTIVATION_SKIP: 1
      CIVICTHEME_LIBRARY_INSTALL_SKIP: 1
      DREVOPS_CI_DRUPAL_THEME_CONFIG_LINT_IGNORE_FAILURE: 1
      DREVOPS_CI_BEHAT_PROFILE: smoke
    <<: *job-build-no-persist

  # Drupal 10, minimal profile, 'government' content profile.
  build-content-government:
    <<: *container_config
    environment:
      CIVICTHEME_CONTENT_PROFILE: government
      CIVICTHEME_SUBTHEME_ACTIVATION_SKIP: 1
      CIVICTHEME_LIBRARY_INSTALL_SKIP: 1
      DREVOPS_CI_DRUPAL_THEME_CONFIG_LINT_IGNORE_FAILURE: 1
      DREVOPS_CI_BEHAT_PROFILE: smoke
    <<: *job-build-no-persist

  # Isolated theme build.
  build-theme-isolated:
    working_directory: ~/project
    docker:
      - image: cimg/php:8.2-browsers
    <<: *job-build-theme-isolated

  # Mirror and redeploy content profiles.
  mirror-into-content-branches:
    <<: *container_config
    <<: *job-mirror

  # Deploy primary branches.
  deploy: &job_deploy
    <<: *container_config
    steps:
      - attach_workspace:
          at: /workspace
      - add_ssh_keys:
          fingerprints:
            - *deploy_ssh_fingerprint
      - checkout
      - *step_process_codebase
      - run:
          command: |
            DREVOPS_DEPLOY_BRANCH="$CIRCLE_BRANCH" \
            DREVOPS_DEPLOY_PR="$(echo $CIRCLE_PULL_REQUEST | cut -d'/' -f 7)" \
            DREVOPS_DEPLOY_PR_HEAD=$CIRCLE_SHA1 \
            ./scripts/drevops/deploy.sh
          no_output_timeout: 30m
      - store_artifacts:
          path: *artifacts

  # Deploy artifact.
  deploy_artifact:
    <<: *container_config
    steps:
      #
      # Workspace now contains previously built application code artifact.
      - attach_workspace:
          at: /workspace
      #
      # Add SSH key into "runner" container to have "push" access to remote
      # repository.
      - add_ssh_keys:
          fingerprints:
            - *deploy_ssh_fingerprint1
            - *deploy_ssh_fingerprint2
            - *deploy_ssh_fingerprint3
            - *deploy_ssh_fingerprint4
            - *deploy_ssh_fingerprint5
      - checkout
      - *step_process_codebase
      - run:
          name: Deploy release to CivicTheme Drupal theme repository.
          command: |
            DEPLOY_SSH_FINGERPRINT=$DEPLOY_SSH_FINGERPRINT1 \
            DEPLOY_CODE_COMMIT_REMOTE_REPO=git@github.com:salsadigitalauorg/civictheme.git \
            DEPLOY_CODE_COMMIT_REMOTE_BRANCH=master \
            DEPLOY_CODE_COMMIT_SRC_DIR="${DREVOPS_EXPORT_CODE_DIR}/web/themes/contrib/civictheme" \
            ./scripts/deploy-code-commit.sh
          no_output_timeout: 30m
      - run:
          name: Deploy release to CivicTheme Library repository.
          command: |
            DEPLOY_SSH_FINGERPRINT=$DEPLOY_SSH_FINGERPRINT2 \
            DEPLOY_CODE_COMMIT_REMOTE_REPO=git@github.com:salsadigitalauorg/civictheme_library.git \
            DEPLOY_CODE_COMMIT_REMOTE_BRANCH=master \
            DEPLOY_CODE_COMMIT_SRC_DIR="${DREVOPS_EXPORT_CODE_DIR}/web/themes/contrib/civictheme/civictheme_library" \
            ./scripts/deploy-code-commit.sh
          no_output_timeout: 30m
      - run:
          name: Deploy release to CivicTheme GovCMS repository.
          command: |
            DEPLOY_SSH_FINGERPRINT=$DEPLOY_SSH_FINGERPRINT3 \
            DEPLOY_CODE_COMMIT_REMOTE_REPO=git@github.com:salsadigitalauorg/civictheme_govcms.git \
            DEPLOY_CODE_COMMIT_REMOTE_BRANCH=master \
            DEPLOY_CODE_COMMIT_SRC_DIR="${DREVOPS_EXPORT_CODE_DIR}/web/modules/custom/civictheme_govcms" \
            ./scripts/deploy-code-commit.sh
          no_output_timeout: 30m
      - run:
          name: Deploy release to CivicTheme Content repository.
          command: |
            DEPLOY_SSH_FINGERPRINT=$DEPLOY_SSH_FINGERPRINT4 \
            DEPLOY_CODE_COMMIT_REMOTE_REPO=git@github.com:salsadigitalauorg/civictheme_content.git \
            DEPLOY_CODE_COMMIT_REMOTE_BRANCH=master \
            DEPLOY_CODE_COMMIT_SRC_DIR="${DREVOPS_EXPORT_CODE_DIR}/web/modules/custom/civictheme_content" \
            ./scripts/deploy-code-commit.sh
          no_output_timeout: 30m
      - run:
          name: Deploy release to CivicTheme Admin repository.
          command: |
            DEPLOY_SSH_FINGERPRINT=$DEPLOY_SSH_FINGERPRINT5 \
            DEPLOY_CODE_COMMIT_REMOTE_REPO=git@github.com:salsadigitalauorg/civictheme_admin.git \
            DEPLOY_CODE_COMMIT_REMOTE_BRANCH=master \
            DEPLOY_CODE_COMMIT_SRC_DIR="${DREVOPS_EXPORT_CODE_DIR}/web/modules/custom/civictheme_admin" \
            ./scripts/deploy-code-commit.sh
          no_output_timeout: 30m
      - store_artifacts:
          path: /tmp/artifacts

  renovatebot_self_hosted:
    docker:
      - image: renovate/renovate:36.108.0
        environment:
          RENOVATE_PLATFORM: 'github'
          RENOVATE_AUTODISCOVER: false
          RENOVATE_DEPENDENCY_DASHBOARD: true
          RENOVATE_DEPENDENCY_DASHBOARD_TITLE: 'RenovateBot Dependency Dashboard (self-hosted)'
          RENOVATE_REPOSITORIES: *renovatebot_repository
          RENOVATE_GIT_AUTHOR: *renovatebot_git_author
          RENOVATE_DRY_RUN: *renovatebot_dry_run
          LOG_LEVEL: debug
    steps:
      - checkout
      - run: renovate-config-validator
      - run: renovate

################################################################################
# WORKFLOWS
################################################################################
workflows:
  version: 2
  #
  # Commit workflow. Runs for every commit push to the remote repository.
  commit:
    jobs:
      - build:
          filters:
            branches:
              ignore: /^content\/.*/
            tags:
              only: /.*/
      - build-no-subtheme:
          filters:
            branches:
              ignore: /^content\/.*/
            tags:
              only: /.*/
      - build-govcms:
          filters:
            branches:
              ignore: /^content\/.*/
            tags:
              only: /.*/
      - build-govcms-no-subtheme:
          filters:
            branches:
              ignore: /^content\/.*/
            tags:
              only: /.*/
      - build-govcms-sibling:
          filters:
            branches:
              only: /develop|^release\/.*|^hotfix\/.*/
            tags:
              only: /.*/
      - build-content-corporate:
          filters:
            branches:
              only: /develop|^release\/.*|^hotfix\/.*/
            tags:
              only: /.*/
      - build-content-highereducation:
          filters:
            branches:
              only: /^release\/.*|^hotfix\/.*/
            tags:
              only: /.*/
      - build-content-government:
          filters:
            branches:
              only: /^release\/.*|^hotfix\/.*/
            tags:
              only: /.*/

      - build-theme-isolated:
          filters:
            branches:
              ignore: /^content\/.*/
            tags:
              only: /.*/

      - deploy:
          requires:
            - build
            - build-govcms
            - build-govcms-no-subtheme
            - build-theme-isolated
          filters:
            branches:
              # Allowed branches:
              # - main, master, develop, ci, cisomething
              # - deps/*
              # - feature/description, feature/123-description
              # - release/123.456.789, release/123.456.789-rc.123 (per https://semver.org/)
              # - release/2023-04-17, release/2023-04-17.123 (date-based)
              # - hotfix/123.456.789, hotfix/123.456.789-rc.1213 (per https://semver.org/)
              # - hotfix/2023-04-17, hotfix/2023-04-17.123 (date-based)
              only: /^(main|master|develop)$|^feature\/[a-zA-z0-9\-\.\,]+|^ci.*|^deps\/.*|^(release|hotfix)\/[0-9]+(\.[0-9]+){2}(-rc\.[0-9]+)?$|^(release|hotfix)\/[0-9]{4}-[0-9]{2}-[0-9]{2}(\.[0-9]+)?$/
            tags:
              ignore: /.*/

      - deploy_artifact:
          requires:
            - build
            - build-no-subtheme
            - build-govcms
            - build-govcms-no-subtheme
            - build-theme-isolated
          filters:
            branches:
              only: develop
            tags:
              ignore: /.*/

      - mirror-into-content-branches:
          requires:
            - build
            - build-no-subtheme
            - build-govcms-no-subtheme
            - build-govcms
          filters:
            branches:
              only: develop
            tags:
              ignore: /.*/

  renovatebot_self_hosted:
    triggers:
      - schedule:
          cron: *renovatebot_schedule
          filters:
            branches:
              only:
                - *renovatebot_branch
    jobs:
      - renovatebot_self_hosted
