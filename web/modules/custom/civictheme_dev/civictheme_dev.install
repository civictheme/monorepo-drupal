<?php

/**
 * @file
 * Install file for core.
 */

declare(strict_types=1);

use Drupal\user\Entity\User;

/**
 * Implements hook_install().
 */
function civictheme_dev_install(): void {
  // Assign user 1 the "administrator" role.
  /** @var \Drupal\user\Entity\User $user */
  $user = User::load(1);
  $user->addRole('administrator');
  $user->save();

  \Drupal::moduleHandler()->loadInclude('civictheme_dev', 'php', 'civictheme_dev.post_update');
  $functions = get_defined_functions();

  // Run all update functions when installing this module.
  foreach ($functions['user'] as $function) {
    if (str_starts_with($function, 'civictheme_dev_update_')) {
      $sandbox = [];
      call_user_func($function, $sandbox);
    }
  }

  // Run all post-update functions when installing this module.
  $key_value = \Drupal::keyValue('post_update');
  $executed_updates = $key_value->get('existing_updates', []);
  foreach ($executed_updates as $function) {
    if (str_starts_with((string) $function, 'civictheme_dev_post_update_')) {
      print sprintf('Running post-update function: %s%s', $function, PHP_EOL);
      $sandbox = [];
      $ret = call_user_func($function, $sandbox);
      if (is_string($ret)) {
        print $ret . PHP_EOL;
      }
    }
  }
}

/**
 * Update database charset and collation to utf8mb4.
 */
function civictheme_dev_update_10001() {
  $database = \Drupal::database();
  $charset = $database->getConnectionOptions()['charset'] ?? 'utf8mb4';
  $collation = $database->getConnectionOptions()['collation'] ?? 'utf8mb4_general_ci';

  echo PHP_EOL;
  echo "Current Charset: $charset", PHP_EOL;
  echo "Current Collation: $collation", PHP_EOL;

  // Retrieve and display the default character set and collation.
  $defaultSettings = $database->query('SELECT @@character_set_database AS charset, @@collation_database AS collation')->fetchAssoc();
  echo "Default Character Set: {$defaultSettings['charset']}", PHP_EOL;
  echo "Default Collation: {$defaultSettings['collation']}", PHP_EOL;

  // Retrieve tables with different collation.
  $tables = $database->query('SHOW TABLE STATUS WHERE Collation <> :collation', [':collation' => $collation])->fetchAllAssoc('Name');
  $tableCount = count($tables);

  if ($tableCount) {
    echo 'Converting collation of ', $tableCount, ' tables to ', $collation, PHP_EOL;
    foreach (array_keys($tables) as $table_name) {
      echo '- Altering table ', $table_name, PHP_EOL;
      try {
        // Perform the collation change.
        $database->query('ALTER TABLE `' . $table_name . '` CONVERT TO CHARACTER SET ' . $charset . ' COLLATE ' . $collation . ';');
        echo "Success: $table_name collation changed to $collation", PHP_EOL;
      }
      catch (\Exception $e) {
        // Catch and display any errors during the ALTER TABLE operation.
        echo "Error altering table $table_name: ", $e->getMessage(), PHP_EOL;
      }
    }

    // Check again for any tables not using the specified collation.
    $leftover_tables = $database->query('SHOW TABLE STATUS WHERE Collation <> :collation', [':collation' => $collation])->fetchAllAssoc('Name');
    $leftoverCount = count($leftover_tables);

    if (!$leftoverCount) {
      echo 'DONE: All tables are using the collation ', $collation, PHP_EOL;
    }
    else {
      echo $leftoverCount, ' tables not using the collation ', $collation, PHP_EOL;
      foreach (array_keys($leftover_tables) as $table_name) {
        echo ' - ', $table_name, ' still not converted.', PHP_EOL;
      }
    }
  }
  else {
    echo 'No action needed: All tables are already using the collation ', $collation, PHP_EOL;
  }

  return t('Database charset and collation update completed.');
}

/**
 * Display tables that don't use utf8mb4_general_ci collation.
 */
function civictheme_dev_update_10002() {
  $database = \Drupal::database();
  $target_collation = 'utf8mb4_general_ci';

  // Retrieve and display tables with different collation.
  $tables = $database->query('SHOW TABLE STATUS WHERE Collation <> :collation', [':collation' => $target_collation])->fetchAll();

  echo PHP_EOL;
  echo "Tables not using $target_collation collation:", PHP_EOL;
  echo "----------------------------------------", PHP_EOL;

  if (empty($tables)) {
    echo "All tables are using $target_collation collation.", PHP_EOL;
  }
  else {
    echo sprintf("Found %d tables with different collation:", count($tables)), PHP_EOL;
    foreach ($tables as $table) {
      echo sprintf("Table: %-50s Collation: %s", $table->Name, $table->Collation), PHP_EOL;
    }
  }

  return t('Database collation check completed.');
}

/**
 * Implements hook_requirements().
 */
function civictheme_dev_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    $database = \Drupal::database();
    $target_collation = 'utf8mb4_general_ci';

    // Retrieve tables with different collation.
    $tables = $database->query('SHOW TABLE STATUS WHERE Collation <> :collation', [':collation' => $target_collation])->fetchAll();
    $tableCount = count($tables);

    if (empty($tables)) {
      $status = 'All tables are using utf8mb4_general_ci collation.';
      $severity = REQUIREMENT_OK;
    }
    else {
      $table_list = [];
      foreach ($tables as $table) {
        $table_list[] = $table->Name . ' (' . $table->Collation . ')';
      }
      $status = sprintf(
        'Found %d tables with non-standard collation: %s',
        $tableCount,
        implode(', ', $table_list)
      );
      $severity = REQUIREMENT_ERROR;
    }

    $requirements['civictheme_dev_database_collation'] = [
      'title' => t('Database Tables Collation'),
      'value' => $status,
      'severity' => $severity,
      'description' => t('All database tables should use utf8mb4_general_ci collation for optimal compatibility.'),
    ];
  }

  return $requirements;
}
